{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","pages/register/style.js","pages/register/index.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","__webpack_require__","d","__webpack_exports__","LoginWrapper","styled","div","_templateObject","logoPic","LoginBox","_templateObject2","LoginTitle","h4","_templateObject3","SignIn","span","_templateObject4","SignUp","_templateObject5","Input","input","_templateObject6","Button","_templateObject7","Tip","_templateObject8","Register","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","email","password","password_confirm","errors","handleInputChange","bind","assertThisInitialized","handleSubmit","e","setState","target","preventDefault","user","props","registerUser","history","document","title","clearErrors","_this$props","isAuthenticated","react_default","a","createElement","react_router","to","react_router_dom","placeholder","onChange","get","type","onClick","React","PureComponent","connect","getIn","dispatch","actionCreators","withRouter"],"mappings":"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","file":"static/js/8.4a93bb49.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import styled from 'styled-components';\r\nimport logoPic from '../../statics/logo.png';\r\n\r\nexport const LoginWrapper = styled.div`\r\n    box-sizing: border-box;\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    top: 0;\r\n    background: url(${logoPic}) no-repeat 90% bottom;\r\n    background-color: #eee;\r\n`\r\nexport const LoginBox = styled.div`\r\n    width: 400px;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    margin-left: -200px;\r\n    margin-top: -270px;\r\n    box-sizing: border-box;\r\n    padding: 50px;\r\n    background-color: #fff;\r\n    border-radius: 4px;\r\n    box-shadow: 0 0 8px rgba(0,0,0,.1);\r\n`\r\nexport const LoginTitle = styled.h4`\r\n    width: 142px;\r\n    margin: 0 auto 30px auto;\r\n    padding: 10px;\r\n    font-weight: 400;\r\n    color: #969696;\r\n    span {\r\n        padding: 10px;\r\n        cursor: pointer;\r\n        font-size: 18px;\r\n    };\r\n    overflow: hidden;\r\n`\r\nexport const SignIn = styled.span`\r\n    font-weight: 700;\r\n    border-bottom: 2px solid #fff;\r\n    float: left;\r\n    color: #969696;\r\n    margin-right: 30px;\r\n`\r\nexport const SignUp = styled.span`\r\n    font-weight: 700;\r\n    color: #ea6f5a;\r\n    border-bottom: 2px solid #ea6f5a;\r\n    float: left;\r\n`\r\nexport const Input = styled.input`\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 50px;\r\n    // margin-bottom: 20px;\r\n    padding: 4px 12px;\r\n    border: 1px solid #c8c8c8;\r\n    border-radius: 4px;\r\n    background-color: hsla(0,0%,71%,.1);\r\n`\r\nexport const Button = styled.div`\r\n    margin-top: 20px;\r\n    padding: 12px 18px;\r\n    font-size: 18px;\r\n    border-radius: 25px;\r\n    color: #fff;\r\n    background: #3194d0;\r\n    cursor: pointer;\r\n    text-align: center;\r\n`\r\nexport const Tip= styled.div`\r\n    font-size: 12px;\r\n    height: 20px;\r\n    line-height: 20px;\r\n    color: red;\r\n`","import React from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link, withRouter,Redirect } from 'react-router-dom';\r\nimport { actionCreators } from './store';\r\nimport {\r\n    LoginWrapper,\r\n    LoginTitle,\r\n    SignIn,\r\n    SignUp,\r\n    LoginBox,\r\n    Input,\r\n    Button,\r\n    Tip,\r\n} from './style.js'\r\n\r\nclass Register extends React.PureComponent {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            password_confirm: '',\r\n            errors: {}\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleInputChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        const user = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            password_confirm: this.state.password_confirm\r\n        }\r\n        // history 是路由组件自动传进来的\r\n        this.props.registerUser(user, this.props.history);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // 检查是否经过登录验证\r\n        // 如果用户已经登录了,当用户再访问登录或者注册的路由时,应该立即跳转到首页\r\n        // if (this.props.isAuthenticated) {\r\n        //     this.props.history.push('/');\r\n        // }\r\n\r\n        document.title = '注册-rr';\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.clearErrors();\r\n    }\r\n\r\n    render() {\r\n        const { isAuthenticated, errors } = this.props;\r\n\r\n        if (!isAuthenticated) {\r\n            return (\r\n                <LoginWrapper>\r\n                    <LoginBox>\r\n                        <LoginTitle>\r\n                            <Link to=\"/login\">\r\n                                <SignIn>登录</SignIn>\r\n                            </Link>\r\n                            <Link to=\"/register\">\r\n                                <SignUp >注册</SignUp>\r\n                            </Link>\r\n                        </LoginTitle>\r\n                        <Input\r\n                            name=\"name\"\r\n                            placeholder=\"用户名\"\r\n                            value={this.state.name}\r\n                            onChange={this.handleInputChange} />\r\n                        <Tip>{errors.get('name')}</Tip>\r\n                        <Input\r\n                            name=\"email\"\r\n                            placeholder=\"邮箱\"\r\n                            value={this.state.email}\r\n                            onChange={this.handleInputChange} />\r\n                        <Tip>{errors.get('email')}</Tip>\r\n                        <Input\r\n                            name=\"password\"\r\n                            placeholder=\"密码\"\r\n                            type=\"password\"\r\n                            value={this.state.password}\r\n                            onChange={this.handleInputChange} />\r\n                        <Tip>{errors.get('password')}</Tip>\r\n                        <Input\r\n                            name=\"password_confirm\"\r\n                            placeholder=\"确认密码\"\r\n                            type=\"password\"\r\n                            value={this.state.password_confirm}\r\n                            onChange={this.handleInputChange} />\r\n                        <Tip>{errors.get('password_confirm')}</Tip>\r\n                        <Button\r\n                            onClick={this.handleSubmit}\r\n                        >注册</Button>\r\n                    </LoginBox>\r\n                </LoginWrapper>\r\n            )\r\n        } else {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n    }\r\n}\r\n\r\n// Register.propTypes = {\r\n//     registerUser: PropTypes.func.isRequired,\r\n//     auth: PropTypes.object.isRequired\r\n// };\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.getIn(['login', 'isAuthenticated']),\r\n    errors: state.getIn(['register', 'errors'])\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    registerUser(user, history) {\r\n        dispatch(actionCreators.registerUser(user, history))\r\n    },\r\n    clearErrors() {\r\n        dispatch(actionCreators.clearErrors());\r\n    },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Register));"],"sourceRoot":""}