{"version":3,"sources":["common/BackTop/style.js","pages/write/index.js"],"names":["BackTop","styled","div","_templateObject","marked","setOptions","highlight","code","highlightAuto","value","Write","props","_this","Object","D_Documents_workspace_RedCat_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_Documents_workspace_RedCat_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_Documents_workspace_RedCat_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","focus","isEmpty","isEmptyTitle","showTip","handleTitleInput","bind","D_Documents_workspace_RedCat_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","handleInput","clear","save","text","trim","e","target","substr","checkIsEmpty","setState","changeTitle","innerText","textContent","html","breaks","changeText","changeHtml","temp","document","createElement","innerHTML","output","title","isEmptyBody","islive","htmlText","descText","getPlainText","article","desc","author","id","postArticle","ipt","alert","window","scrollTo","top","behavior","changePath","history","location","pathname","articleId","search","replace","getDetail","_this2","_this$props","isAuthenticated","postStatus","postTipClass","classNames","postTip","success","failed","react__WEBPACK_IMPORTED_MODULE_6___default","a","className","onChange","type","placeholder","autoFocus","contentEditable","ref","onInput","onFocus","onBlur","onClick","dangerouslySetInnerHTML","__html","_common_BackTop_style_js__WEBPACK_IMPORTED_MODULE_15__","handleScrollTop","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","to","React","PureComponent","connect","getIn","dispatch","headerActionCreators","inputDiv","actionCreators","withRouter"],"mappings":"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","file":"static/js/5.a2ea5f79.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const BackTop =styled.div`\r\n    color: #999;\r\n    position: fixed;\r\n    right: 2%;\r\n    bottom: 30px;\r\n    width: 70px;\r\n    height: 60px;\r\n    line-height: 60px;\r\n    font-size: 14px;\r\n    text-align: center;\r\n    border: 1px solid #dcdcdc;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    background-color: #fff;\r\n    opacity: 0.8;\r\n`","import React from 'react';\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport marked from 'marked';\r\n// 代码高亮，原理是给代码加 span 和 类名，再引入对应的 css\r\nimport highlight from 'highlight.js';\r\n\r\nimport './TextEditor.scss';\r\nimport { actionCreators } from './store';\r\nimport { actionCreators as headerActionCreators } from '../../common/header/store';\r\nimport { BackTop } from '../../common/BackTop/style.js';\r\n\r\nmarked.setOptions({\r\n    highlight(code) {\r\n        return highlight.highlightAuto(code).value\r\n    }\r\n})\r\n\r\nclass Write extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        // 将 html text title 交给 redux 管理\r\n        this.state = {\r\n            focus: false,\r\n            isEmpty: true, //输入框是否为空\r\n            isEmptyTitle: true, //输入框是否为空\r\n            showTip: false, //是否显示提示文字\r\n        }\r\n\r\n        this.handleTitleInput = this.handleTitleInput.bind(this);\r\n        this.handleInput = this.handleInput.bind(this);\r\n        // this.handleKeyDown = this.handleKeyDown.bind(this);\r\n        this.clear = this.clear.bind(this);\r\n        this.save = this.save.bind(this);\r\n    }\r\n    // 检查输入是否为空\r\n    checkIsEmpty(text) {\r\n        return text.trim() === '';\r\n    }\r\n    // 处理标题输入\r\n    handleTitleInput(e) {\r\n        let text = e.target.value.substr(0, 50);\r\n        let isEmptyTitle = this.checkIsEmpty(text);\r\n\r\n        this.setState(() => ({\r\n            'isEmptyTitle': isEmptyTitle,\r\n            'showTip': false,\r\n        }));\r\n\r\n        this.props.changeTitle(text);\r\n    }\r\n    // 输入事件处理\r\n    handleInput(e) {\r\n        let text = e.target.innerText || e.target.textContent;\r\n        let html = marked(text, { breaks: true })\r\n        let isEmpty = this.checkIsEmpty(text);\r\n        // console.log(html.substr(0, 50))\r\n        this.setState(() => ({\r\n            'isEmpty': isEmpty,\r\n            'showTip': false,\r\n        }));\r\n        this.props.changeText(text);\r\n        this.props.changeHtml(html);\r\n    }\r\n\r\n    // 从 HTML 中提取纯文本\r\n    getPlainText(html) {\r\n        //动态创建一个容器标签元素，如DIV\r\n        var temp = document.createElement(\"div\");\r\n        //将要转换的字符串设置为这个元素的innerHTML(ie，火狐，google都支持)\r\n        temp.innerHTML = html;\r\n        //返回这个元素的innerText(ie)或者textContent，即得到经过HTML解码的字符串了。\r\n        var output = temp.innerText || temp.textContent;\r\n        temp = null;\r\n        return output;\r\n    }\r\n\r\n    save() {\r\n        // 发布前检查输入内容是否为空\r\n        let isEmptyTitle = this.checkIsEmpty(this.props.title);\r\n        let isEmptyBody = this.checkIsEmpty(this.props.text);\r\n        this.setState(() => ({\r\n            isEmptyTitle: isEmptyTitle,\r\n            isEmpty: isEmptyBody,\r\n        }));\r\n        // 只有激活用户才能发表文章\r\n        if (!this.props.islive) {\r\n            alert('请先激活 Email');\r\n            return;\r\n        }\r\n        // 检查输入是否为空\r\n        if (isEmptyTitle || isEmptyBody) {\r\n            this.setState({\r\n                'showTip': true,\r\n            })\r\n            return;\r\n        }\r\n        const htmlText = this.props.html\r\n        // 截取一部分正文作为简介\r\n        const descText = this.getPlainText(htmlText).substr(0, 90) + '……';\r\n        // 文章的标题，正文原文，mark之后的正文，作者id，文章id\r\n        const article = {\r\n            title: this.props.title,\r\n            text: this.props.text,\r\n            html: htmlText,\r\n            desc: descText,\r\n            author: this.props.author,\r\n            id: this.props.id //文章 id\r\n        }\r\n        this.props.postArticle(article, this.ipt);\r\n    }\r\n    // 清空输入框\r\n    clear() {\r\n        this.setState({\r\n            'html': '',\r\n            'isEmpty': true,\r\n        })\r\n\r\n        this.ipt.innerText = '';\r\n        // this.ipt.focus();\r\n        this.props.changeTitle('');\r\n        this.props.changeText('');\r\n        this.props.changeHtml('');\r\n    }\r\n\r\n    // 点击回到顶部\r\n    handleScrollTop() {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: \"smooth\"\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        // 更改 pathname, 用来改变导航样式\r\n        this.props.changePath(this.props.history.location.pathname);\r\n\r\n        // 从查询字符串中提取文章的 id\r\n        const articleId = this.props.location.search.replace(/^\\?=/, '');\r\n        // id 不为空就拉取文章内容填到输入框中\r\n        if (articleId !== '') {\r\n            this.props.getDetail(articleId, this.ipt);\r\n            this.setState(() => ({\r\n                isEmpty: false, //输入框是否为空\r\n                isEmptyTitle: false, //输入框是否为空\r\n            }));\r\n        }\r\n\r\n        document.title = '写文章-rr';\r\n    }\r\n\r\n    render() {\r\n        const { isAuthenticated, postStatus, title, html} = this.props;\r\n        const postTipClass = classNames({\r\n            postTip: true,\r\n            success: postStatus === 1,\r\n            failed: postStatus === -1\r\n        });\r\n        // 未登陆渲染登陆页,已登陆,跳转到首页\r\n        if (isAuthenticated) {\r\n            return (\r\n                <div className={this.state.focus === true ? 'TextEditor focus' : 'TextEditor'}>\r\n                    {/* 标题输入框 */}\r\n                    <div className=\"titleEditor\">\r\n                        <input className=\"title\"\r\n                            onChange={this.handleTitleInput}\r\n                            type=\"text\"\r\n                            value={title}\r\n                            placeholder=\"请输入标题（最多50个字）\"\r\n                            autoFocus\r\n                        />\r\n                    </div>\r\n                    <div className={this.state.focus === true ? 'textareaWrap focus' : 'textareaWrap'}>\r\n                        {/* 模拟输入框 */}\r\n                        <div className=\"textarea\"\r\n                            contentEditable=\"true\"\r\n                            ref={ipt => this.ipt = ipt}\r\n                            onInput={this.handleInput}\r\n                            // onKeyDown={this.handleKeyDown}\r\n                            onFocus={() => {\r\n                                this.setState({\r\n                                    'focus': true\r\n                                })\r\n                            }}\r\n                            onBlur={() => {\r\n                                this.setState({\r\n                                    'focus': false\r\n                                })\r\n                            }}\r\n                        />\r\n                        {/* 模拟 placeholder */}\r\n                        <div className={this.state.isEmpty ? 'placeholder' : 'hide placeholder'}>请输入正文（支持 Markdown）</div>\r\n                        <div className=\"App-btn\">\r\n                            <i\r\n                                onClick={() => this.ipt.focus()}\r\n                                className=\"iconfont\"\r\n                                title=\"编辑\">&#xe65c; </i>\r\n                            <input\r\n                                // 保存到服务器，成功的时候清空输入框\r\n                                onClick={this.save}\r\n                                type=\"button\"\r\n                                className=\"submit\"\r\n                                value=\"发布\"\r\n                            />\r\n                            <input\r\n                                // 保存到服务器，成功的时候清空输入框\r\n                                onClick={this.clear}\r\n                                type=\"button\"\r\n                                className=\"clear\"\r\n                                value=\"清空\"\r\n                            />\r\n                        </div>\r\n\r\n                        <span className={this.state.showTip ? 'TextEditor-tip show' : 'TextEditor-tip'}\r\n                        >标题或正文为空，请输入\r\n                        </span>\r\n                    </div>\r\n                    {/* 预览 */}\r\n                    <div className={this.state.isEmpty ? 'empty preview marked' : 'preview marked'}\r\n                        dangerouslySetInnerHTML={{ __html: html }}\r\n                    />\r\n                    {/* 提示框 */}\r\n                    <div className={postTipClass}>\r\n                        {postStatus === 1 ? '文章发表成功' : postStatus === -1 ? '服务器错误请稍后再试' : ''}\r\n                    </div>\r\n                    {/* 回到顶部 */}\r\n\r\n                    <BackTop onClick={this.handleScrollTop}>BackTop</BackTop>\r\n                </div>)\r\n        }\r\n\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.getIn(['login', 'isAuthenticated']),\r\n    author: state.getIn(['login', 'user', 'name']),\r\n    islive: state.getIn(['login', 'user', 'islive']),\r\n    postStatus: state.getIn(['write', 'postStatus']),\r\n    title: state.getIn(['write', 'title']),\r\n    html: state.getIn(['write', 'html']),\r\n    text: state.getIn(['write', 'text']),\r\n    id: state.getIn(['write', 'id']),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    changePath(pathname) {\r\n        dispatch(headerActionCreators.changePath(pathname));\r\n    },\r\n    postArticle(article, inputDiv) {\r\n        dispatch(actionCreators.postArticle(article, inputDiv));\r\n    },\r\n    changeTitle(title) {\r\n        dispatch(actionCreators.changeTitle(title));\r\n    },\r\n    changeHtml(html) {\r\n        dispatch(actionCreators.changeHtml(html));\r\n    },\r\n    changeText(text) {\r\n        dispatch(actionCreators.changeText(text));\r\n    },\r\n    getDetail(id, inputDiv) {\r\n        dispatch(actionCreators.getDetail(id, inputDiv));\r\n    }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Write));"],"sourceRoot":""}